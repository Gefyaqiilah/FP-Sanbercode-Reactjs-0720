{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\FP-Sanbercode-Reactjs-0720\\\\src\\\\pages\\\\movies\\\\ListMovie.js\";\nimport React, { Component, useContext, useState, useEffect } from 'react';\nimport './css/ListMovie.css';\nimport { MoviesContext } from '../../context/MoviesContext';\nimport axios from 'axios';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport ButtonBase from '@material-ui/core/ButtonBase';\nimport StarIcon from '@material-ui/icons/Star';\n\nconst ListMovie = () => {\n  const [movies, setMovies] = useContext(MoviesContext);\n  const useStyles = makeStyles(theme => ({\n    root: {\n      flexGrow: 2\n    },\n    paper: {\n      padding: theme.spacing(2),\n      margin: '5px',\n      marginTop: '10px',\n      marginLeft: 'auto',\n      marginRight: 'auto',\n      maxWidth: '1050px'\n    },\n    image: {\n      width: 150\n    },\n    img: {\n      margin: 'auto',\n      display: 'block',\n      maxWidth: '100%',\n      maxHeight: '100%'\n    }\n  }));\n  useEffect(() => {\n    if (movies.lists === null) {\n      axios.get(`https://backendexample.sanbersy.com/api/movies`).then(res => {\n        setMovies({ ...movies,\n          lists: res.data.map(el => {\n            return {\n              id: el.id,\n              created_at: el.created_at,\n              updated_at: el.updated_at,\n              title: el.title,\n              description: el.description,\n              year: el.year,\n              duration: el.duration,\n              genre: el.genre,\n              rating: el.rating,\n              review: el.review,\n              image_url: el.image_url\n            };\n          })\n        });\n      });\n    }\n  });\n  const classes = useStyles();\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }, movies.lists !== null && movies.lists.map((item, index) => {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.root,\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Paper, {\n      className: classes.paper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      spacing: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(ButtonBase, {\n      className: classes.image,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: classes.img,\n      alt: \"complex\",\n      src: item.image_url,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 49\n      }\n    }))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: true,\n      container: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: true,\n      container: true,\n      direction: \"column\",\n      spacing: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      gutterBottom: true,\n      variant: \"subtitle1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        fontWeight: 'bold',\n        fontSize: \"19px\",\n        textTransform: \"uppercase\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 57\n      }\n    }, item.title), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 57\n      }\n    }, \" (\", item.year, \")\")), /*#__PURE__*/React.createElement(Typography, {\n      variant: \"body2\",\n      color: \"textSecondary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 53\n      }\n    }, item.duration, \" min | \", item.genre), /*#__PURE__*/React.createElement(Typography, {\n      variant: \"body2\",\n      gutterBottom: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(StarIcon, {\n      style: {\n        color: \"orange\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 57\n      }\n    }), \" \", /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        fontWeight: \"bold\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 98\n      }\n    }, item.rating)), /*#__PURE__*/React.createElement(Typography, {\n      variant: \"body2\",\n      gutterBottom: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 53\n      }\n    }, item.description)), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"body2\",\n      style: {\n        cursor: 'pointer'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      color: \"primary\",\n      variant: \"contained\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 57\n      }\n    })))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"subtitle1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 49\n      }\n    }, \"$19.00\")))))));\n  })));\n};\n\nexport default ListMovie;","map":{"version":3,"sources":["C:/xampp/htdocs/FP-Sanbercode-Reactjs-0720/src/pages/movies/ListMovie.js"],"names":["React","Component","useContext","useState","useEffect","MoviesContext","axios","makeStyles","Grid","Paper","Typography","ButtonBase","StarIcon","ListMovie","movies","setMovies","useStyles","theme","root","flexGrow","paper","padding","spacing","margin","marginTop","marginLeft","marginRight","maxWidth","image","width","img","display","maxHeight","lists","get","then","res","data","map","el","id","created_at","updated_at","title","description","year","duration","genre","rating","review","image_url","classes","item","index","fontWeight","fontSize","textTransform","color","cursor"],"mappings":"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","sourcesContent":["import React, { Component, useContext, useState, useEffect } from 'react';\r\nimport './css/ListMovie.css';\r\nimport { MoviesContext } from '../../context/MoviesContext'\r\nimport axios from 'axios';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ButtonBase from '@material-ui/core/ButtonBase';\r\nimport StarIcon from '@material-ui/icons/Star';\r\n\r\nconst ListMovie = () => {\r\n    const [movies, setMovies] = useContext(MoviesContext);\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        root: {\r\n            flexGrow: 2,\r\n        },\r\n        paper: {\r\n            padding: theme.spacing(2),\r\n            margin: '5px',\r\n            marginTop: '10px',\r\n            marginLeft: 'auto',\r\n            marginRight: 'auto',\r\n            maxWidth: '1050px',\r\n        },\r\n        image: {\r\n            width: 150,\r\n        },\r\n        img: {\r\n            margin: 'auto',\r\n            display: 'block',\r\n            maxWidth: '100%',\r\n            maxHeight: '100%',\r\n        },\r\n    }));\r\n\r\n    useEffect(() => {\r\n        if (movies.lists === null) {\r\n            axios.get(`https://backendexample.sanbersy.com/api/movies`)\r\n                .then(res => {\r\n                    setMovies({\r\n                        ...movies, lists: res.data.map(el => {\r\n                            return {\r\n                                id: el.id,\r\n                                created_at: el.created_at,\r\n                                updated_at: el.updated_at,\r\n                                title: el.title,\r\n                                description: el.description,\r\n                                year: el.year,\r\n                                duration: el.duration,\r\n                                genre: el.genre,\r\n                                rating: el.rating,\r\n                                review: el.review,\r\n                                image_url: el.image_url\r\n                            }\r\n                        })\r\n                    })\r\n                })\r\n        }\r\n    })\r\n\r\n    const classes = useStyles();\r\n    return (\r\n        <>\r\n            <div id=\"content\">\r\n\r\n                {movies.lists !== null && movies.lists.map((item, index) => {\r\n                    return (\r\n                        <>\r\n                            <div className={classes.root} key={index}>\r\n                                <Paper className={classes.paper}>\r\n                                    <Grid container spacing={2}>\r\n                                        <Grid item>\r\n                                            <ButtonBase className={classes.image}>\r\n                                                <img className={classes.img} alt=\"complex\" src={item.image_url} />\r\n                                            </ButtonBase>\r\n                                        </Grid>\r\n                                        <Grid item xs={12} sm container>\r\n                                            <Grid item xs container direction=\"column\" spacing={2}>\r\n                                                <Grid item xs>\r\n                                                    <Typography gutterBottom variant=\"subtitle1\">\r\n                                                        <span style={{ fontWeight: 'bold', fontSize: \"19px\", textTransform: \"uppercase\" }}>{item.title}</span>\r\n                                                        <span> ({item.year})</span>\r\n                                                    </Typography>\r\n                                                    <Typography variant=\"body2\" color=\"textSecondary\">\r\n                                                        {item.duration} min | {item.genre}\r\n                                                    </Typography>\r\n                                                    <Typography variant=\"body2\" gutterBottom>\r\n                                                        <StarIcon style={{ color: \"orange\" }} /> <span style={{ fontWeight: \"bold\" }}>{item.rating}</span>\r\n                                                    </Typography>\r\n                                                    <Typography variant=\"body2\" gutterBottom>\r\n                                                        {item.description}\r\n                                                    </Typography>\r\n                                                </Grid>\r\n                                                <Grid item>\r\n                                                    <Typography variant=\"body2\" style={{ cursor: 'pointer' }}>\r\n                                                        <Button color=\"primary\" variant=\"contained\"></Button>\r\n                                                    </Typography>\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                            <Grid item>\r\n                                                <Typography variant=\"subtitle1\">$19.00</Typography>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Paper>\r\n                            </div>\r\n                        </>\r\n                    )\r\n                }\r\n                )}\r\n\r\n\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default ListMovie;"]},"metadata":{},"sourceType":"module"}