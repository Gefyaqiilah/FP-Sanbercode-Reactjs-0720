{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\FP-Sanbercode-Reactjs-0720\\\\src\\\\pages\\\\movies\\\\Table-Movie.js\";\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport MaterialTable from 'material-table';\n\nconst TableMovie = () => {\n  const [state, setState] = React.useState({\n    columns: [{\n      title: 'Name',\n      field: 'name'\n    }, {\n      title: 'Surname',\n      field: 'surname'\n    }, {\n      title: 'Birth Year',\n      field: 'birthYear',\n      type: 'numeric'\n    }, {\n      title: 'Birth Place',\n      field: 'birthCity',\n      lookup: {\n        34: 'İstanbul',\n        63: 'Şanlıurfa'\n      }\n    }],\n    data: [{\n      name: 'Mehmet',\n      surname: 'Baran',\n      birthYear: 1987,\n      birthCity: 63\n    }, {\n      name: 'Zerya Betül',\n      surname: 'Baran',\n      birthYear: 2017,\n      birthCity: 34\n    }]\n  });\n  return /*#__PURE__*/React.createElement(MaterialTable, {\n    title: \"Editable Example\",\n    columns: state.columns,\n    data: state.data,\n    editable: {\n      onRowAdd: newData => new Promise(resolve => {\n        setTimeout(() => {\n          resolve();\n          setState(prevState => {\n            const data = [...prevState.data];\n            data.push(newData);\n            return { ...prevState,\n              data\n            };\n          });\n        }, 600);\n      }),\n      onRowUpdate: (newData, oldData) => new Promise(resolve => {\n        setTimeout(() => {\n          resolve();\n\n          if (oldData) {\n            setState(prevState => {\n              const data = [...prevState.data];\n              data[data.indexOf(oldData)] = newData;\n              return { ...prevState,\n                data\n              };\n            });\n          }\n        }, 600);\n      }),\n      onRowDelete: oldData => new Promise(resolve => {\n        setTimeout(() => {\n          resolve();\n          setState(prevState => {\n            const data = [...prevState.data];\n            data.splice(data.indexOf(oldData), 1);\n            return { ...prevState,\n              data\n            };\n          });\n        }, 600);\n      })\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  });\n};\n\nexport default TableMovie;","map":{"version":3,"sources":["C:/xampp/htdocs/FP-Sanbercode-Reactjs-0720/src/pages/movies/Table-Movie.js"],"names":["React","makeStyles","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","MaterialTable","TableMovie","state","setState","useState","columns","title","field","type","lookup","data","name","surname","birthYear","birthCity","onRowAdd","newData","Promise","resolve","setTimeout","prevState","push","onRowUpdate","oldData","indexOf","onRowDelete","splice"],"mappings":"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","sourcesContent":["import React from 'react';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nimport MaterialTable from 'material-table';\r\n\r\nconst TableMovie = () => {\r\n    const [state, setState] = React.useState({\r\n        columns: [\r\n            { title: 'Name', field: 'name' },\r\n            { title: 'Surname', field: 'surname' },\r\n            { title: 'Birth Year', field: 'birthYear', type: 'numeric' },\r\n            {\r\n                title: 'Birth Place',\r\n                field: 'birthCity',\r\n                lookup: { 34: 'İstanbul', 63: 'Şanlıurfa' },\r\n            },\r\n        ],\r\n        data: [\r\n            { name: 'Mehmet', surname: 'Baran', birthYear: 1987, birthCity: 63 },\r\n            {\r\n                name: 'Zerya Betül',\r\n                surname: 'Baran',\r\n                birthYear: 2017,\r\n                birthCity: 34,\r\n            },\r\n        ],\r\n    });\r\n\r\n    return (\r\n        <MaterialTable\r\n            title=\"Editable Example\"\r\n            columns={state.columns}\r\n            data={state.data}\r\n            editable={{\r\n                onRowAdd: (newData) =>\r\n                    new Promise((resolve) => {\r\n                        setTimeout(() => {\r\n                            resolve();\r\n                            setState((prevState) => {\r\n                                const data = [...prevState.data];\r\n                                data.push(newData);\r\n                                return { ...prevState, data };\r\n                            });\r\n                        }, 600);\r\n                    }),\r\n                onRowUpdate: (newData, oldData) =>\r\n                    new Promise((resolve) => {\r\n                        setTimeout(() => {\r\n                            resolve();\r\n                            if (oldData) {\r\n                                setState((prevState) => {\r\n                                    const data = [...prevState.data];\r\n                                    data[data.indexOf(oldData)] = newData;\r\n                                    return { ...prevState, data };\r\n                                });\r\n                            }\r\n                        }, 600);\r\n                    }),\r\n                onRowDelete: (oldData) =>\r\n                    new Promise((resolve) => {\r\n                        setTimeout(() => {\r\n                            resolve();\r\n                            setState((prevState) => {\r\n                                const data = [...prevState.data];\r\n                                data.splice(data.indexOf(oldData), 1);\r\n                                return { ...prevState, data };\r\n                            });\r\n                        }, 600);\r\n                    }),\r\n            }}\r\n        />\r\n    );\r\n\r\n}\r\nexport default TableMovie;"]},"metadata":{},"sourceType":"module"}