{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\FP-Sanbercode-Reactjs-0720\\\\src\\\\pages\\\\games\\\\CreateGame.js\";\nimport React from 'react';\nimport { useState } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\n\nconst CreateGame = () => {\n  const [input, setInput] = useState({\n    name: \"\",\n    genre: \"\",\n    singleplayer: \"No\",\n    checkedsingleplayer: true,\n    checkedmultiplayer: false,\n    multiplayer: \"\",\n    platform: \"\",\n    release: 0,\n    image_url: \"\"\n  });\n\n  const handleChange = event => {\n    let getName = event.target.name;\n    let getChecked = event.target.checked;\n\n    switch (getName) {\n      case \"name\":\n        setInput({ ...input,\n          name: event.target.value\n        });\n        break;\n\n      case \"genre\":\n        setInput({ ...input,\n          genre: event.target.value\n        });\n        break;\n\n      case \"singleplayer\":\n        setInput({ ...input,\n          singleplayer: event.target.checked\n        });\n        break;\n\n      case \"multiplayer\":\n        break;\n\n      case \"platform\":\n        setInput({ ...input,\n          platform: event.target.value\n        });\n        break;\n\n      case \"release\":\n        setInput({ ...input,\n          release: event.target.value\n        });\n        break;\n\n      case \"image_url\":\n        setInput({ ...input,\n          image_url: event.target.value\n        });\n        break;\n\n      default:\n        {\n          break;\n        }\n    }\n  };\n\n  const handleCheckedSingle = event => {\n    let getChecked = event.target.checked;\n\n    if (getChecked === true) {\n      setInput({ ...input,\n        singleplayer: \"Yes\",\n        checkedsingleplayer: true\n      });\n    } else if (getChecked === false) {\n      setInput({ ...input,\n        singleplayer: \"No\",\n        checkedsingleplayer: false\n      });\n    }\n  };\n\n  console.log(input);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"contentcreate\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  }, \"cek\"), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 21\n    }\n  }, \"Add Movie\")), /*#__PURE__*/React.createElement(\"form\", {\n    style: {\n      margin: \"20px\",\n      padding: \"15px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    style: {\n      float: \"right\",\n      marginRight: \"450px\",\n      color: \"black\",\n      fontSize: \"16px\",\n      fontWeight: 'bolder'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 25\n    }\n  }, \"Genre:\"), /*#__PURE__*/React.createElement(InputLabel, {\n    style: {\n      marginLeft: \"10px\",\n      color: \"black\",\n      fontSize: \"16px\",\n      fontWeight: 'bolder'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 25\n    }\n  }, \"Game Title:\"), /*#__PURE__*/React.createElement(TextField, {\n    style: {\n      width: \"400px\",\n      marginTop: '10px'\n    },\n    type: \"text\",\n    id: \"outlined-secondary\",\n    label: \"Game Title\",\n    variant: \"outlined\",\n    name: \"name\",\n    onChange: handleChange // value={input.title}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    style: {\n      marginLeft: \"100px\",\n      width: \"400px\",\n      marginTop: '10px'\n    },\n    type: \"text\",\n    id: \"outlined-secondary\",\n    label: \"Genre\",\n    variant: \"outlined\",\n    name: \"genre\",\n    onChange: handleChange // value={input.year}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginTop: \"50px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    style: {\n      float: \"right\",\n      marginRight: \"430px\",\n      color: \"black\",\n      fontSize: \"16px\",\n      fontWeight: 'bolder'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 25\n    }\n  }, \"Release:\"), /*#__PURE__*/React.createElement(InputLabel, {\n    style: {\n      marginLeft: \"10px\",\n      color: \"black\",\n      fontSize: \"16px\",\n      fontWeight: 'bolder'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 25\n    }\n  }, \"Platform:\"), /*#__PURE__*/React.createElement(TextField, {\n    style: {\n      width: \"400px\",\n      marginTop: '10px'\n    },\n    type: \"text\",\n    id: \"outlined-secondary\",\n    label: \"Platform\",\n    variant: \"outlined\",\n    name: \"platform\",\n    onChange: handleChange // value={input.description}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    style: {\n      marginLeft: \"100px\",\n      width: \"400px\",\n      marginTop: '10px'\n    },\n    type: \"date\",\n    id: \"outlined-secondary\",\n    variant: \"outlined\",\n    name: \"release\",\n    onChange: handleChange // value={input.duration}\n    ,\n    inputProps: {\n      min: \"1\",\n      step: \"1\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginTop: \"50px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    style: {\n      float: \"right\",\n      marginRight: \"430px\",\n      color: \"black\",\n      fontSize: \"16px\",\n      fontWeight: 'bolder'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 25\n    }\n  }, \"Duration:\"), /*#__PURE__*/React.createElement(InputLabel, {\n    style: {\n      marginLeft: \"10px\",\n      color: \"black\",\n      fontSize: \"16px\",\n      fontWeight: 'bolder'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 25\n    }\n  }, \"Image URL:\"), /*#__PURE__*/React.createElement(TextField, {\n    style: {\n      width: \"400px\",\n      marginTop: '10px'\n    },\n    type: \"text\",\n    id: \"outlined-secondary\",\n    label: \"image URL\",\n    variant: \"outlined\",\n    name: \"image_url\",\n    onChange: handleChange,\n    value: input.image_url,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(FormControlLabel, {\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      checked: input.checkedsingleplayer,\n      onChange: handleChecked,\n      name: \"singleplayer\",\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 33\n      }\n    }),\n    label: \"Primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 25\n    }\n  })))));\n};\n\nexport default CreateGame;","map":{"version":3,"sources":["C:/xampp/htdocs/FP-Sanbercode-Reactjs-0720/src/pages/games/CreateGame.js"],"names":["React","useState","TextField","InputLabel","Checkbox","Select","MenuItem","FormControlLabel","CreateGame","input","setInput","name","genre","singleplayer","checkedsingleplayer","checkedmultiplayer","multiplayer","platform","release","image_url","handleChange","event","getName","target","getChecked","checked","value","handleCheckedSingle","console","log","margin","padding","float","marginRight","color","fontSize","fontWeight","marginLeft","width","marginTop","min","step","handleChecked"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { useState } from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n\r\n\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nconst CreateGame = () => {\r\n    const [input, setInput] = useState({\r\n        name: \"\",\r\n        genre: \"\",\r\n        singleplayer: \"No\",\r\n        checkedsingleplayer: true,\r\n        checkedmultiplayer: false,\r\n        multiplayer: \"\",\r\n        platform: \"\",\r\n        release: 0,\r\n        image_url: \"\"\r\n    });\r\n\r\n    const handleChange = (event) => {\r\n        let getName = event.target.name;\r\n        let getChecked = event.target.checked;\r\n        switch (getName) {\r\n            case \"name\": setInput({ ...input, name: event.target.value })\r\n                break;\r\n            case \"genre\": setInput({ ...input, genre: event.target.value })\r\n                break;\r\n            case \"singleplayer\": setInput({ ...input, singleplayer: event.target.checked })\r\n                break;\r\n            case \"multiplayer\":\r\n                break;\r\n            case \"platform\": setInput({ ...input, platform: event.target.value })\r\n                break;\r\n            case \"release\": setInput({ ...input, release: event.target.value })\r\n                break;\r\n            case \"image_url\": setInput({ ...input, image_url: event.target.value })\r\n                break;\r\n            default: { break; }\r\n        }\r\n\r\n    }\r\n    const handleCheckedSingle = (event) => {\r\n        let getChecked = event.target.checked;\r\n        if (getChecked === true) {\r\n            setInput({ ...input, singleplayer: \"Yes\", checkedsingleplayer: true })\r\n        } else if (getChecked === false) {\r\n            setInput({ ...input, singleplayer: \"No\", checkedsingleplayer: false })\r\n        }\r\n\r\n    }\r\n    console.log(input)\r\n\r\n    return (\r\n        <>\r\n            <div id=\"contentcreate\">\r\n                <h1>cek</h1>\r\n                <h1><span>Add Movie</span></h1 >\r\n                <form style={{ margin: \"20px\", padding: \"15px\" }}>\r\n                    <div>\r\n                        <InputLabel style={{ float: \"right\", marginRight: \"450px\", color: \"black\", fontSize: \"16px\", fontWeight: 'bolder' }}>Genre:</InputLabel>\r\n                        <InputLabel style={{ marginLeft: \"10px\", color: \"black\", fontSize: \"16px\", fontWeight: 'bolder' }} >Game Title:</InputLabel>\r\n                        <TextField\r\n                            style={{ width: \"400px\", marginTop: '10px' }}\r\n                            type=\"text\"\r\n                            id=\"outlined-secondary\"\r\n                            label=\"Game Title\"\r\n                            variant=\"outlined\"\r\n                            name=\"name\"\r\n                            onChange={handleChange}\r\n                        // value={input.title}\r\n\r\n                        />\r\n\r\n                        <TextField\r\n                            style={{\r\n                                marginLeft: \"100px\",\r\n                                width: \"400px\", marginTop: '10px'\r\n                            }}\r\n                            type=\"text\"\r\n                            id=\"outlined-secondary\"\r\n                            label=\"Genre\"\r\n                            variant=\"outlined\"\r\n                            name=\"genre\"\r\n                            onChange={handleChange}\r\n                        // value={input.year}\r\n                        />\r\n                    </div>\r\n                    <div style={{ marginTop: \"50px\" }}>\r\n                        <InputLabel style={{ float: \"right\", marginRight: \"430px\", color: \"black\", fontSize: \"16px\", fontWeight: 'bolder' }}>Release:</InputLabel>\r\n                        <InputLabel style={{ marginLeft: \"10px\", color: \"black\", fontSize: \"16px\", fontWeight: 'bolder' }} >Platform:</InputLabel>\r\n                        <TextField\r\n                            style={{ width: \"400px\", marginTop: '10px' }}\r\n                            type=\"text\"\r\n                            id=\"outlined-secondary\"\r\n                            label=\"Platform\"\r\n                            variant=\"outlined\"\r\n                            name=\"platform\"\r\n                            onChange={handleChange}\r\n                        // value={input.description}\r\n\r\n                        />\r\n\r\n                        <TextField\r\n                            style={{ marginLeft: \"100px\", width: \"400px\", marginTop: '10px' }}\r\n                            type=\"date\"\r\n                            id=\"outlined-secondary\"\r\n                            variant=\"outlined\"\r\n                            name=\"release\"\r\n                            onChange={handleChange}\r\n                            // value={input.duration}\r\n                            inputProps={{ min: \"1\", step: \"1\" }}\r\n                        />\r\n                    </div>\r\n                    <div style={{ marginTop: \"50px\" }}>\r\n                        <InputLabel style={{ float: \"right\", marginRight: \"430px\", color: \"black\", fontSize: \"16px\", fontWeight: 'bolder' }}>Duration:</InputLabel>\r\n                        <InputLabel style={{ marginLeft: \"10px\", color: \"black\", fontSize: \"16px\", fontWeight: 'bolder' }} >Image URL:</InputLabel>\r\n                        <TextField\r\n                            style={{ width: \"400px\", marginTop: '10px' }}\r\n                            type=\"text\"\r\n                            id=\"outlined-secondary\"\r\n                            label=\"image URL\"\r\n                            variant=\"outlined\"\r\n                            name=\"image_url\"\r\n                            onChange={handleChange}\r\n                            value={input.image_url}\r\n                        />\r\n                        <FormControlLabel\r\n                            control={\r\n                                <Checkbox\r\n                                    checked={input.checkedsingleplayer}\r\n                                    onChange={handleChecked}\r\n                                    name=\"singleplayer\"\r\n                                    color=\"primary\"\r\n                                />\r\n                            }\r\n                            label=\"Primary\"\r\n                        />\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default CreateGame;"]},"metadata":{},"sourceType":"module"}