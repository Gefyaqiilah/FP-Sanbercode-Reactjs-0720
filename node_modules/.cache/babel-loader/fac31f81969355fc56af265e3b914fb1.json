{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\FP-Sanbercode-Reactjs-0720\\\\src\\\\pages\\\\games\\\\EditGame.js\";\nimport React, { useEffect } from 'react';\nimport { useState } from 'react';\nimport axios from 'axios';\nimport { useHistory, useParams } from 'react-router-dom';\nimport TextField from '@material-ui/core/TextField';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Button from '@material-ui/core/Button';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\n\nconst EditGame = () => {\n  const [input, setInput] = useState({\n    name: \"\",\n    genre: \"\",\n    singleplayer: 0,\n    checkedsingleplayer: false,\n    checkedmultiplayer: false,\n    multiplayer: 0,\n    platform: \"\",\n    release: 0,\n    image_url: \"\"\n  });\n  const [singlegame, setSingleGame] = useState(null);\n  const history = useHistory();\n  const {\n    id\n  } = useParams();\n  console.log({\n    id\n  });\n  useEffect(() => {\n    if (singlegame === null) {\n      axios.get(`https://backendexample.sanbersy.com/api/games/${id}`).then(res => {\n        setSingleGame(res.data);\n        setInput({\n          name: res.data.name,\n          genre: res.data.genre,\n          singleplayer: res.data.singlePlayer,\n          multiplayer: res.data.multiplayer,\n          platform: res.data.platform,\n          release: res.data.release,\n          image_url: res.data.image_url\n        });\n\n        if (res.data.singlePlayer === 1) {\n          setInput({\n            checkedsingleplayer: true\n          });\n        } else if (res.data.singlePlayer === 0) {\n          setInput({\n            checkedsingleplayer: false\n          });\n        }\n\n        if (res.data.multiplayer === 1) {\n          setInput({\n            checkedsingleplayer: true\n          });\n        } else if (res.data.multiplayer === 0) {\n          setInput({\n            checkedsingleplayer: false\n          });\n        }\n      });\n    }\n  });\n\n  const handleChange = event => {\n    let getName = event.target.name;\n    let getChecked = event.target.checked;\n\n    switch (getName) {\n      case \"name\":\n        setInput({ ...input,\n          name: event.target.value\n        });\n        break;\n\n      case \"genre\":\n        setInput({ ...input,\n          genre: event.target.value\n        });\n        break;\n\n      case \"singleplayer\":\n        setInput({ ...input,\n          singleplayer: event.target.checked\n        });\n        break;\n\n      case \"multiplayer\":\n        break;\n\n      case \"platform\":\n        setInput({ ...input,\n          platform: event.target.value\n        });\n        break;\n\n      case \"release\":\n        setInput({ ...input,\n          release: event.target.value\n        });\n        break;\n\n      case \"image_url\":\n        setInput({ ...input,\n          image_url: event.target.value\n        });\n        break;\n\n      default:\n        {\n          break;\n        }\n    }\n  };\n\n  const handleCheckedSinglePlayer = event => {\n    let getChecked = event.target.checked;\n\n    if (getChecked === true) {\n      setInput({ ...input,\n        singleplayer: 1,\n        checkedsingleplayer: true\n      });\n    } else if (getChecked === false) {\n      setInput({ ...input,\n        singleplayer: 0,\n        checkedsingleplayer: false\n      });\n    }\n  };\n\n  const handleCheckedMultiPlayer = event => {\n    let getChecked = event.target.checked;\n\n    if (getChecked === true) {\n      setInput({ ...input,\n        multiplayer: 1,\n        checkedmultiplayer: true\n      });\n    } else if (getChecked === false) {\n      setInput({ ...input,\n        multiplayer: 0,\n        checkedmultiplayer: false\n      });\n    }\n  };\n\n  console.log(input);\n\n  const handleUpdate = event => {\n    event.preventDefault();\n    let name = input.name;\n    let genre = input.genre;\n    let singleplayer = input.singleplayer;\n    let multiplayer = input.multiplayer;\n    let release = parseInt(input.release);\n    let platform = input.platform;\n    let image_url = input.image_url;\n\n    if (name.replace(/\\s/g, '') !== \"\" && genre.replace(/\\s/g, '') !== \"\" && release.toString().replace(/\\s/g, '') !== \"\" && platform.toString().replace(/\\s/g, '') !== \"\" && image_url.replace(/\\s/g, '') !== \"\") {\n      axios.put(`https://backendexample.sanbersy.com/api/games/${id}`, {\n        name: input.name,\n        genre: input.genre,\n        singlePlayer: input.singleplayer,\n        multiplayer: input.multiplayer,\n        platform: input.platform,\n        release: release,\n        image_url: input.image_url\n      }).then(res => {\n        console.log(res.data);\n        alert('Data berhasil ditambahkan..');\n        setInput({\n          name: \"\",\n          genre: \"\",\n          singleplayer: 0,\n          checkedsingleplayer: false,\n          checkedmultiplayer: false,\n          multiplayer: 0,\n          platform: \"\",\n          release: 0,\n          image_url: \"\"\n        });\n      }).catch(er => {\n        console.log(er);\n        setInput({ ...input\n        });\n      });\n    } else {\n      alert('Maaf Kolom ada yang belum diisi, Silahkan cek kembali');\n    }\n  };\n\n  const handleBack = event => {\n    event.preventDefault();\n    history.push(\"/game/tablegame\");\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"contentcreate\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 17\n    }\n  }, \" \", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 22\n    }\n  }, \" Add Movie \")), /*#__PURE__*/React.createElement(\"form\", {\n    style: {\n      margin: \"20px\",\n      padding: \"15px\"\n    },\n    onSubmit: handleUpdate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    style: {\n      float: \"right\",\n      marginRight: \"450px\",\n      color: \"black\",\n      fontSize: \"16px\",\n      fontWeight: 'bolder'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 25\n    }\n  }, \" Genre: \"), /*#__PURE__*/React.createElement(InputLabel, {\n    style: {\n      marginLeft: \"10px\",\n      color: \"black\",\n      fontSize: \"16px\",\n      fontWeight: 'bolder'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 25\n    }\n  }, \" Game Title: \"), /*#__PURE__*/React.createElement(TextField, {\n    style: {\n      width: \"400px\",\n      marginTop: '10px'\n    },\n    type: \"text\",\n    id: \"outlined-secondary\",\n    label: \"Game Title\",\n    variant: \"outlined\",\n    name: \"name\",\n    onChange: handleChange,\n    value: input.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    style: {\n      marginLeft: \"100px\",\n      width: \"400px\",\n      marginTop: '10px'\n    },\n    type: \"text\",\n    id: \"outlined-secondary\",\n    label: \"Genre\",\n    variant: \"outlined\",\n    name: \"genre\",\n    onChange: handleChange,\n    value: input.genre,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginTop: \"50px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    style: {\n      float: \"right\",\n      marginRight: \"430px\",\n      color: \"black\",\n      fontSize: \"16px\",\n      fontWeight: 'bolder'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 25\n    }\n  }, \" Release: \"), /*#__PURE__*/React.createElement(InputLabel, {\n    style: {\n      marginLeft: \"10px\",\n      color: \"black\",\n      fontSize: \"16px\",\n      fontWeight: 'bolder'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 25\n    }\n  }, \" Platform: \"), /*#__PURE__*/React.createElement(TextField, {\n    style: {\n      width: \"400px\",\n      marginTop: '10px'\n    },\n    type: \"text\",\n    id: \"outlined-secondary\",\n    label: \"Platform\",\n    variant: \"outlined\",\n    name: \"platform\",\n    onChange: handleChange,\n    value: input.platform,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    style: {\n      marginLeft: \"100px\",\n      width: \"400px\",\n      marginTop: '10px'\n    },\n    type: \"number\",\n    id: \"outlined-secondary\",\n    variant: \"outlined\",\n    name: \"release\",\n    onChange: handleChange,\n    value: input.release,\n    inputProps: {\n      step: \"1\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginTop: \"50px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    style: {\n      float: \"right\",\n      marginRight: \"430px\",\n      color: \"black\",\n      fontSize: \"16px\",\n      fontWeight: 'bolder'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 25\n    }\n  }, \" Mode: \"), /*#__PURE__*/React.createElement(InputLabel, {\n    style: {\n      marginLeft: \"10px\",\n      color: \"black\",\n      fontSize: \"16px\",\n      fontWeight: 'bolder'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 25\n    }\n  }, \" Image URL: \"), /*#__PURE__*/React.createElement(TextField, {\n    style: {\n      width: \"400px\",\n      marginTop: '10px'\n    },\n    type: \"text\",\n    id: \"outlined-secondary\",\n    label: \"image URL\",\n    variant: \"outlined\",\n    name: \"image_url\",\n    onChange: handleChange,\n    value: input.image_url,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(FormControlLabel, {\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      checked: input.checkedsingleplayer,\n      onChange: handleCheckedSinglePlayer,\n      name: \"singleplayer\",\n      color: \"primary\",\n      style: {\n        marginLeft: \"100px\",\n        marginTop: \"10px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 29\n      }\n    }),\n    label: \"SinglePlayer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(FormControlLabel, {\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      checked: input.checkedmultiplayer,\n      onChange: handleCheckedMultiPlayer,\n      name: \"multiplayer\",\n      color: \"primary\",\n      style: {\n        marginLeft: \"100px\",\n        marginTop: \"10px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 29\n      }\n    }),\n    label: \"Multiplayer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginTop: \"50px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"Submit\",\n    variant: \"contained\",\n    style: {\n      backgroundColor: \"gold\",\n      color: \"black\",\n      fontWeight: 'bolder'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 25\n    }\n  }, \" Submit \"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    onClick: handleBack,\n    color: \"warning\",\n    style: {\n      float: \"right\",\n      backgroundColor: \"black\",\n      color: \"gold\",\n      fontWeight: 'bolder'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 25\n    }\n  }, \"Back\"), \" \"))));\n};\n\nexport default EditGame;","map":{"version":3,"sources":["C:/xampp/htdocs/FP-Sanbercode-Reactjs-0720/src/pages/games/EditGame.js"],"names":["React","useEffect","useState","axios","useHistory","useParams","TextField","InputLabel","Checkbox","Button","Select","MenuItem","FormControlLabel","EditGame","input","setInput","name","genre","singleplayer","checkedsingleplayer","checkedmultiplayer","multiplayer","platform","release","image_url","singlegame","setSingleGame","history","id","console","log","get","then","res","data","singlePlayer","handleChange","event","getName","target","getChecked","checked","value","handleCheckedSinglePlayer","handleCheckedMultiPlayer","handleUpdate","preventDefault","parseInt","replace","toString","put","alert","catch","er","handleBack","push","margin","padding","float","marginRight","color","fontSize","fontWeight","marginLeft","width","marginTop","step","backgroundColor"],"mappings":";AAAA,OAAOA,KAAP,IACIC,SADJ,QAEO,OAFP;AAGA,SACIC,QADJ,QAEO,OAFP;AAGA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SACIC,UADJ,EAEIC,SAFJ,QAGO,kBAHP;AAMA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AAEA,OAAOC,MAAP,MAAmB,0BAAnB;AAEA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;;AACA,MAAMC,QAAQ,GAAG,MAAM;AACnB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,CAAC;AAC/Bc,IAAAA,IAAI,EAAE,EADyB;AAE/BC,IAAAA,KAAK,EAAE,EAFwB;AAG/BC,IAAAA,YAAY,EAAE,CAHiB;AAI/BC,IAAAA,mBAAmB,EAAE,KAJU;AAK/BC,IAAAA,kBAAkB,EAAE,KALW;AAM/BC,IAAAA,WAAW,EAAE,CANkB;AAO/BC,IAAAA,QAAQ,EAAE,EAPqB;AAQ/BC,IAAAA,OAAO,EAAE,CARsB;AAS/BC,IAAAA,SAAS,EAAE;AAToB,GAAD,CAAlC;AAWA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BxB,QAAQ,CAAC,IAAD,CAA5C;AACA,QAAMyB,OAAO,GAAGvB,UAAU,EAA1B;AACA,QAAM;AAAEwB,IAAAA;AAAF,MAASvB,SAAS,EAAxB;AACAwB,EAAAA,OAAO,CAACC,GAAR,CAAY;AAAEF,IAAAA;AAAF,GAAZ;AAEA3B,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIwB,UAAU,KAAK,IAAnB,EAAyB;AACrBtB,MAAAA,KAAK,CAAC4B,GAAN,CAAW,iDAAgDH,EAAG,EAA9D,EACKI,IADL,CACUC,GAAG,IAAI;AACTP,QAAAA,aAAa,CAACO,GAAG,CAACC,IAAL,CAAb;AACAnB,QAAAA,QAAQ,CAAC;AACLC,UAAAA,IAAI,EAAEiB,GAAG,CAACC,IAAJ,CAASlB,IADV;AAELC,UAAAA,KAAK,EAAEgB,GAAG,CAACC,IAAJ,CAASjB,KAFX;AAGLC,UAAAA,YAAY,EAAEe,GAAG,CAACC,IAAJ,CAASC,YAHlB;AAILd,UAAAA,WAAW,EAAEY,GAAG,CAACC,IAAJ,CAASb,WAJjB;AAKLC,UAAAA,QAAQ,EAAEW,GAAG,CAACC,IAAJ,CAASZ,QALd;AAMLC,UAAAA,OAAO,EAAEU,GAAG,CAACC,IAAJ,CAASX,OANb;AAOLC,UAAAA,SAAS,EAAES,GAAG,CAACC,IAAJ,CAASV;AAPf,SAAD,CAAR;;AASA,YAAIS,GAAG,CAACC,IAAJ,CAASC,YAAT,KAA0B,CAA9B,EAAiC;AAC7BpB,UAAAA,QAAQ,CAAC;AAAEI,YAAAA,mBAAmB,EAAE;AAAvB,WAAD,CAAR;AACH,SAFD,MAEO,IAAIc,GAAG,CAACC,IAAJ,CAASC,YAAT,KAA0B,CAA9B,EAAiC;AACpCpB,UAAAA,QAAQ,CAAC;AAAEI,YAAAA,mBAAmB,EAAE;AAAvB,WAAD,CAAR;AACH;;AACD,YAAIc,GAAG,CAACC,IAAJ,CAASb,WAAT,KAAyB,CAA7B,EAAgC;AAC5BN,UAAAA,QAAQ,CAAC;AAAEI,YAAAA,mBAAmB,EAAE;AAAvB,WAAD,CAAR;AACH,SAFD,MAEO,IAAIc,GAAG,CAACC,IAAJ,CAASb,WAAT,KAAyB,CAA7B,EAAgC;AACnCN,UAAAA,QAAQ,CAAC;AAAEI,YAAAA,mBAAmB,EAAE;AAAvB,WAAD,CAAR;AACH;AACJ,OAtBL;AAuBH;AAEJ,GA3BQ,CAAT;;AA+BA,QAAMiB,YAAY,GAAIC,KAAD,IAAW;AAC5B,QAAIC,OAAO,GAAGD,KAAK,CAACE,MAAN,CAAavB,IAA3B;AACA,QAAIwB,UAAU,GAAGH,KAAK,CAACE,MAAN,CAAaE,OAA9B;;AACA,YAAQH,OAAR;AACI,WAAK,MAAL;AACIvB,QAAAA,QAAQ,CAAC,EACL,GAAGD,KADE;AAELE,UAAAA,IAAI,EAAEqB,KAAK,CAACE,MAAN,CAAaG;AAFd,SAAD,CAAR;AAIA;;AACJ,WAAK,OAAL;AACI3B,QAAAA,QAAQ,CAAC,EACL,GAAGD,KADE;AAELG,UAAAA,KAAK,EAAEoB,KAAK,CAACE,MAAN,CAAaG;AAFf,SAAD,CAAR;AAIA;;AACJ,WAAK,cAAL;AACI3B,QAAAA,QAAQ,CAAC,EACL,GAAGD,KADE;AAELI,UAAAA,YAAY,EAAEmB,KAAK,CAACE,MAAN,CAAaE;AAFtB,SAAD,CAAR;AAIA;;AACJ,WAAK,aAAL;AACI;;AACJ,WAAK,UAAL;AACI1B,QAAAA,QAAQ,CAAC,EACL,GAAGD,KADE;AAELQ,UAAAA,QAAQ,EAAEe,KAAK,CAACE,MAAN,CAAaG;AAFlB,SAAD,CAAR;AAIA;;AACJ,WAAK,SAAL;AACI3B,QAAAA,QAAQ,CAAC,EACL,GAAGD,KADE;AAELS,UAAAA,OAAO,EAAEc,KAAK,CAACE,MAAN,CAAaG;AAFjB,SAAD,CAAR;AAIA;;AACJ,WAAK,WAAL;AACI3B,QAAAA,QAAQ,CAAC,EACL,GAAGD,KADE;AAELU,UAAAA,SAAS,EAAEa,KAAK,CAACE,MAAN,CAAaG;AAFnB,SAAD,CAAR;AAIA;;AACJ;AAAS;AACL;AACH;AAzCL;AA4CH,GA/CD;;AAgDA,QAAMC,yBAAyB,GAAIN,KAAD,IAAW;AACzC,QAAIG,UAAU,GAAGH,KAAK,CAACE,MAAN,CAAaE,OAA9B;;AACA,QAAID,UAAU,KAAK,IAAnB,EAAyB;AACrBzB,MAAAA,QAAQ,CAAC,EACL,GAAGD,KADE;AAELI,QAAAA,YAAY,EAAE,CAFT;AAGLC,QAAAA,mBAAmB,EAAE;AAHhB,OAAD,CAAR;AAKH,KAND,MAMO,IAAIqB,UAAU,KAAK,KAAnB,EAA0B;AAC7BzB,MAAAA,QAAQ,CAAC,EACL,GAAGD,KADE;AAELI,QAAAA,YAAY,EAAE,CAFT;AAGLC,QAAAA,mBAAmB,EAAE;AAHhB,OAAD,CAAR;AAKH;AACJ,GAfD;;AAiBA,QAAMyB,wBAAwB,GAAIP,KAAD,IAAW;AACxC,QAAIG,UAAU,GAAGH,KAAK,CAACE,MAAN,CAAaE,OAA9B;;AACA,QAAID,UAAU,KAAK,IAAnB,EAAyB;AACrBzB,MAAAA,QAAQ,CAAC,EACL,GAAGD,KADE;AAELO,QAAAA,WAAW,EAAE,CAFR;AAGLD,QAAAA,kBAAkB,EAAE;AAHf,OAAD,CAAR;AAKH,KAND,MAMO,IAAIoB,UAAU,KAAK,KAAnB,EAA0B;AAC7BzB,MAAAA,QAAQ,CAAC,EACL,GAAGD,KADE;AAELO,QAAAA,WAAW,EAAE,CAFR;AAGLD,QAAAA,kBAAkB,EAAE;AAHf,OAAD,CAAR;AAKH;AACJ,GAfD;;AAgBAS,EAAAA,OAAO,CAACC,GAAR,CAAYhB,KAAZ;;AAEA,QAAM+B,YAAY,GAAIR,KAAD,IAAW;AAC5BA,IAAAA,KAAK,CAACS,cAAN;AAEA,QAAI9B,IAAI,GAAGF,KAAK,CAACE,IAAjB;AACA,QAAIC,KAAK,GAAGH,KAAK,CAACG,KAAlB;AACA,QAAIC,YAAY,GAAGJ,KAAK,CAACI,YAAzB;AACA,QAAIG,WAAW,GAAGP,KAAK,CAACO,WAAxB;AACA,QAAIE,OAAO,GAAGwB,QAAQ,CAACjC,KAAK,CAACS,OAAP,CAAtB;AACA,QAAID,QAAQ,GAAGR,KAAK,CAACQ,QAArB;AACA,QAAIE,SAAS,GAAGV,KAAK,CAACU,SAAtB;;AAEA,QAAIR,IAAI,CAACgC,OAAL,CAAa,KAAb,EAAoB,EAApB,MAA4B,EAA5B,IAAkC/B,KAAK,CAAC+B,OAAN,CAAc,KAAd,EAAqB,EAArB,MAA6B,EAA/D,IAAqEzB,OAAO,CAAC0B,QAAR,GAAmBD,OAAnB,CAA2B,KAA3B,EAAkC,EAAlC,MAA0C,EAA/G,IAAqH1B,QAAQ,CAAC2B,QAAT,GAAoBD,OAApB,CAA4B,KAA5B,EAAmC,EAAnC,MAA2C,EAAhK,IAAsKxB,SAAS,CAACwB,OAAV,CAAkB,KAAlB,EAAyB,EAAzB,MAAiC,EAA3M,EAA+M;AAC3M7C,MAAAA,KAAK,CAAC+C,GAAN,CAAW,iDAAgDtB,EAAG,EAA9D,EAAiE;AAC7DZ,QAAAA,IAAI,EAAEF,KAAK,CAACE,IADiD;AAE7DC,QAAAA,KAAK,EAAEH,KAAK,CAACG,KAFgD;AAG7DkB,QAAAA,YAAY,EAAErB,KAAK,CAACI,YAHyC;AAI7DG,QAAAA,WAAW,EAAEP,KAAK,CAACO,WAJ0C;AAK7DC,QAAAA,QAAQ,EAAER,KAAK,CAACQ,QAL6C;AAM7DC,QAAAA,OAAO,EAAEA,OANoD;AAO7DC,QAAAA,SAAS,EAAEV,KAAK,CAACU;AAP4C,OAAjE,EASKQ,IATL,CASUC,GAAG,IAAI;AACTJ,QAAAA,OAAO,CAACC,GAAR,CAAYG,GAAG,CAACC,IAAhB;AACAiB,QAAAA,KAAK,CAAC,6BAAD,CAAL;AACApC,QAAAA,QAAQ,CAAC;AACLC,UAAAA,IAAI,EAAE,EADD;AAELC,UAAAA,KAAK,EAAE,EAFF;AAGLC,UAAAA,YAAY,EAAE,CAHT;AAILC,UAAAA,mBAAmB,EAAE,KAJhB;AAKLC,UAAAA,kBAAkB,EAAE,KALf;AAMLC,UAAAA,WAAW,EAAE,CANR;AAOLC,UAAAA,QAAQ,EAAE,EAPL;AAQLC,UAAAA,OAAO,EAAE,CARJ;AASLC,UAAAA,SAAS,EAAE;AATN,SAAD,CAAR;AAWH,OAvBL,EAwBK4B,KAxBL,CAwBWC,EAAE,IAAI;AACTxB,QAAAA,OAAO,CAACC,GAAR,CAAYuB,EAAZ;AACAtC,QAAAA,QAAQ,CAAC,EACL,GAAGD;AADE,SAAD,CAAR;AAGH,OA7BL;AA+BH,KAhCD,MAgCO;AACHqC,MAAAA,KAAK,CAAC,uDAAD,CAAL;AACH;AACJ,GA9CD;;AA+CA,QAAMG,UAAU,GAAIjB,KAAD,IAAW;AAC1BA,IAAAA,KAAK,CAACS,cAAN;AACAnB,IAAAA,OAAO,CAAC4B,IAAR,CAAa,iBAAb;AACH,GAHD;;AAKA,sBACI,uDACI;AAAK,IAAA,EAAE,EAAC,eAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAL,CADJ,eAEI;AAAM,IAAA,KAAK,EAAE;AAAEC,MAAAA,MAAM,EAAE,MAAV;AAAkBC,MAAAA,OAAO,EAAE;AAA3B,KAAb;AAAkD,IAAA,QAAQ,EAAEZ,YAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAE;AAAEa,MAAAA,KAAK,EAAE,OAAT;AAAkBC,MAAAA,WAAW,EAAE,OAA/B;AAAwCC,MAAAA,KAAK,EAAE,OAA/C;AAAwDC,MAAAA,QAAQ,EAAE,MAAlE;AAA0EC,MAAAA,UAAU,EAAE;AAAtF,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAE;AAAEC,MAAAA,UAAU,EAAE,MAAd;AAAsBH,MAAAA,KAAK,EAAE,OAA7B;AAAsCC,MAAAA,QAAQ,EAAE,MAAhD;AAAwDC,MAAAA,UAAU,EAAE;AAApE,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAFJ,eAGI,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAE;AAAEE,MAAAA,KAAK,EAAE,OAAT;AAAkBC,MAAAA,SAAS,EAAE;AAA7B,KAAlB;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,EAAE,EAAC,oBAFP;AAGI,IAAA,KAAK,EAAC,YAHV;AAII,IAAA,OAAO,EAAC,UAJZ;AAKI,IAAA,IAAI,EAAC,MALT;AAMI,IAAA,QAAQ,EAAE7B,YANd;AAOI,IAAA,KAAK,EAAEtB,KAAK,CAACE,IAPjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,eAYI,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAE;AAAE+C,MAAAA,UAAU,EAAE,OAAd;AAAuBC,MAAAA,KAAK,EAAE,OAA9B;AAAuCC,MAAAA,SAAS,EAAE;AAAlD,KAAlB;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,EAAE,EAAC,oBAFP;AAGI,IAAA,KAAK,EAAC,OAHV;AAII,IAAA,OAAO,EAAC,UAJZ;AAKI,IAAA,IAAI,EAAC,OALT;AAMI,IAAA,QAAQ,EAAE7B,YANd;AAOI,IAAA,KAAK,EAAEtB,KAAK,CAACG,KAPjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZJ,CADJ,eAuBI;AAAK,IAAA,KAAK,EAAE;AAAEgD,MAAAA,SAAS,EAAE;AAAb,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAE;AACfP,MAAAA,KAAK,EAAE,OADQ;AAEfC,MAAAA,WAAW,EAAE,OAFE;AAGfC,MAAAA,KAAK,EAAE,OAHQ;AAIfC,MAAAA,QAAQ,EAAE,MAJK;AAKfC,MAAAA,UAAU,EAAE;AALG,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eASI,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAE;AACfC,MAAAA,UAAU,EAAE,MADG;AAEfH,MAAAA,KAAK,EAAE,OAFQ;AAGfC,MAAAA,QAAQ,EAAE,MAHK;AAIfC,MAAAA,UAAU,EAAE;AAJG,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBATJ,eAeI,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAE;AAAEE,MAAAA,KAAK,EAAE,OAAT;AAAkBC,MAAAA,SAAS,EAAE;AAA7B,KAAlB;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,EAAE,EAAC,oBAFP;AAGI,IAAA,KAAK,EAAC,UAHV;AAII,IAAA,OAAO,EAAC,UAJZ;AAKI,IAAA,IAAI,EAAC,UALT;AAMI,IAAA,QAAQ,EAAE7B,YANd;AAOI,IAAA,KAAK,EAAEtB,KAAK,CAACQ,QAPjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAfJ,eAyBI,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAE;AACdyC,MAAAA,UAAU,EAAE,OADE;AAEdC,MAAAA,KAAK,EAAE,OAFO;AAGdC,MAAAA,SAAS,EAAE;AAHG,KAAlB;AAKI,IAAA,IAAI,EAAC,QALT;AAMI,IAAA,EAAE,EAAC,oBANP;AAOI,IAAA,OAAO,EAAC,UAPZ;AAQI,IAAA,IAAI,EAAC,SART;AASI,IAAA,QAAQ,EAAE7B,YATd;AAUI,IAAA,KAAK,EAAEtB,KAAK,CAACS,OAVjB;AAWI,IAAA,UAAU,EAAE;AAAE2C,MAAAA,IAAI,EAAE;AAAR,KAXhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAzBJ,CAvBJ,eA8DI;AAAK,IAAA,KAAK,EAAE;AAAED,MAAAA,SAAS,EAAE;AAAb,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAGI,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAE;AACfP,MAAAA,KAAK,EAAE,OADQ;AAEfC,MAAAA,WAAW,EAAE,OAFE;AAGfC,MAAAA,KAAK,EAAE,OAHQ;AAIfC,MAAAA,QAAQ,EAAE,MAJK;AAKfC,MAAAA,UAAU,EAAE;AALG,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAHJ,eAUI,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAE;AACfC,MAAAA,UAAU,EAAE,MADG;AAEfH,MAAAA,KAAK,EAAE,OAFQ;AAGfC,MAAAA,QAAQ,EAAE,MAHK;AAIfC,MAAAA,UAAU,EAAE;AAJG,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAVJ,eAgBI,oBAAC,SAAD;AAAW,IAAA,KAAK,EACZ;AACIE,MAAAA,KAAK,EAAE,OADX;AAEIC,MAAAA,SAAS,EAAE;AAFf,KADJ;AAMI,IAAA,IAAI,EAAC,MANT;AAOI,IAAA,EAAE,EAAC,oBAPP;AAQI,IAAA,KAAK,EAAC,WARV;AASI,IAAA,OAAO,EAAC,UATZ;AAUI,IAAA,IAAI,EAAC,WAVT;AAWI,IAAA,QAAQ,EACJ7B,YAZR;AAcI,IAAA,KAAK,EACDtB,KAAK,CAACU,SAfd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhBJ,eAiCI,oBAAC,gBAAD;AAAkB,IAAA,OAAO,eACrB,oBAAC,QAAD;AACI,MAAA,OAAO,EACHV,KAAK,CAACK,mBAFd;AAII,MAAA,QAAQ,EACJwB,yBALR;AAOI,MAAA,IAAI,EAAC,cAPT;AAQI,MAAA,KAAK,EAAC,SARV;AASI,MAAA,KAAK,EACD;AACIoB,QAAAA,UAAU,EAAE,OADhB;AAEIE,QAAAA,SAAS,EAAE;AAFf,OAVR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAkBI,IAAA,KAAK,EAAC,cAlBV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjCJ,eAqDI,oBAAC,gBAAD;AAAkB,IAAA,OAAO,eACrB,oBAAC,QAAD;AACI,MAAA,OAAO,EACHnD,KAAK,CAACM,kBAFd;AAII,MAAA,QAAQ,EACJwB,wBALR;AAOI,MAAA,IAAI,EAAC,aAPT;AAQI,MAAA,KAAK,EAAC,SARV;AASI,MAAA,KAAK,EACD;AACImB,QAAAA,UAAU,EAAE,OADhB;AAEIE,QAAAA,SAAS,EAAE;AAFf,OAVR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAkBI,IAAA,KAAK,EAAC,aAlBV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IArDJ,CA9DJ,eAuII;AAAK,IAAA,KAAK,EAAE;AAAEA,MAAAA,SAAS,EAAE;AAAb,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,QAAb;AACI,IAAA,OAAO,EAAC,WADZ;AAEI,IAAA,KAAK,EACD;AACIE,MAAAA,eAAe,EAAE,MADrB;AAEIP,MAAAA,KAAK,EAAE,OAFX;AAGIE,MAAAA,UAAU,EAAE;AAHhB,KAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAUI,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,WAAhB;AACI,IAAA,OAAO,EACHR,UAFR;AAII,IAAA,KAAK,EAAC,SAJV;AAKI,IAAA,KAAK,EACD;AACII,MAAAA,KAAK,EAAE,OADX;AAEIS,MAAAA,eAAe,EAAE,OAFrB;AAGIP,MAAAA,KAAK,EAAE,MAHX;AAIIE,MAAAA,UAAU,EAAE;AAJhB,KANR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAVJ,MAvIJ,CAFJ,CADJ,CADJ;AAuKH,CA9VD;;AA+VA,eAAejD,QAAf","sourcesContent":["import React, {\r\n    useEffect\r\n} from 'react';\r\nimport {\r\n    useState\r\n} from 'react';\r\nimport axios from 'axios';\r\nimport {\r\n    useHistory,\r\n    useParams\r\n} from 'react-router-dom'\r\n\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nconst EditGame = () => {\r\n    const [input, setInput] = useState({\r\n        name: \"\",\r\n        genre: \"\",\r\n        singleplayer: 0,\r\n        checkedsingleplayer: false,\r\n        checkedmultiplayer: false,\r\n        multiplayer: 0,\r\n        platform: \"\",\r\n        release: 0,\r\n        image_url: \"\"\r\n    });\r\n    const [singlegame, setSingleGame] = useState(null)\r\n    const history = useHistory();\r\n    const { id } = useParams();\r\n    console.log({ id })\r\n\r\n    useEffect(() => {\r\n        if (singlegame === null) {\r\n            axios.get(`https://backendexample.sanbersy.com/api/games/${id}`)\r\n                .then(res => {\r\n                    setSingleGame(res.data)\r\n                    setInput({\r\n                        name: res.data.name,\r\n                        genre: res.data.genre,\r\n                        singleplayer: res.data.singlePlayer,\r\n                        multiplayer: res.data.multiplayer,\r\n                        platform: res.data.platform,\r\n                        release: res.data.release,\r\n                        image_url: res.data.image_url,\r\n                    })\r\n                    if (res.data.singlePlayer === 1) {\r\n                        setInput({ checkedsingleplayer: true })\r\n                    } else if (res.data.singlePlayer === 0) {\r\n                        setInput({ checkedsingleplayer: false })\r\n                    }\r\n                    if (res.data.multiplayer === 1) {\r\n                        setInput({ checkedsingleplayer: true })\r\n                    } else if (res.data.multiplayer === 0) {\r\n                        setInput({ checkedsingleplayer: false })\r\n                    }\r\n                })\r\n        }\r\n\r\n    }\r\n\r\n    )\r\n\r\n    const handleChange = (event) => {\r\n        let getName = event.target.name;\r\n        let getChecked = event.target.checked;\r\n        switch (getName) {\r\n            case \"name\":\r\n                setInput({\r\n                    ...input,\r\n                    name: event.target.value\r\n                })\r\n                break;\r\n            case \"genre\":\r\n                setInput({\r\n                    ...input,\r\n                    genre: event.target.value\r\n                })\r\n                break;\r\n            case \"singleplayer\":\r\n                setInput({\r\n                    ...input,\r\n                    singleplayer: event.target.checked\r\n                })\r\n                break;\r\n            case \"multiplayer\":\r\n                break;\r\n            case \"platform\":\r\n                setInput({\r\n                    ...input,\r\n                    platform: event.target.value\r\n                })\r\n                break;\r\n            case \"release\":\r\n                setInput({\r\n                    ...input,\r\n                    release: event.target.value\r\n                })\r\n                break;\r\n            case \"image_url\":\r\n                setInput({\r\n                    ...input,\r\n                    image_url: event.target.value\r\n                })\r\n                break;\r\n            default: {\r\n                break;\r\n            }\r\n        }\r\n\r\n    }\r\n    const handleCheckedSinglePlayer = (event) => {\r\n        let getChecked = event.target.checked;\r\n        if (getChecked === true) {\r\n            setInput({\r\n                ...input,\r\n                singleplayer: 1,\r\n                checkedsingleplayer: true\r\n            })\r\n        } else if (getChecked === false) {\r\n            setInput({\r\n                ...input,\r\n                singleplayer: 0,\r\n                checkedsingleplayer: false\r\n            })\r\n        }\r\n    }\r\n\r\n    const handleCheckedMultiPlayer = (event) => {\r\n        let getChecked = event.target.checked;\r\n        if (getChecked === true) {\r\n            setInput({\r\n                ...input,\r\n                multiplayer: 1,\r\n                checkedmultiplayer: true\r\n            })\r\n        } else if (getChecked === false) {\r\n            setInput({\r\n                ...input,\r\n                multiplayer: 0,\r\n                checkedmultiplayer: false\r\n            })\r\n        }\r\n    }\r\n    console.log(input)\r\n\r\n    const handleUpdate = (event) => {\r\n        event.preventDefault();\r\n\r\n        let name = input.name;\r\n        let genre = input.genre;\r\n        let singleplayer = input.singleplayer;\r\n        let multiplayer = input.multiplayer;\r\n        let release = parseInt(input.release);\r\n        let platform = input.platform;\r\n        let image_url = input.image_url;\r\n\r\n        if (name.replace(/\\s/g, '') !== \"\" && genre.replace(/\\s/g, '') !== \"\" && release.toString().replace(/\\s/g, '') !== \"\" && platform.toString().replace(/\\s/g, '') !== \"\" && image_url.replace(/\\s/g, '') !== \"\") {\r\n            axios.put(`https://backendexample.sanbersy.com/api/games/${id}`, {\r\n                name: input.name,\r\n                genre: input.genre,\r\n                singlePlayer: input.singleplayer,\r\n                multiplayer: input.multiplayer,\r\n                platform: input.platform,\r\n                release: release,\r\n                image_url: input.image_url\r\n            })\r\n                .then(res => {\r\n                    console.log(res.data);\r\n                    alert('Data berhasil ditambahkan..')\r\n                    setInput({\r\n                        name: \"\",\r\n                        genre: \"\",\r\n                        singleplayer: 0,\r\n                        checkedsingleplayer: false,\r\n                        checkedmultiplayer: false,\r\n                        multiplayer: 0,\r\n                        platform: \"\",\r\n                        release: 0,\r\n                        image_url: \"\"\r\n                    })\r\n                })\r\n                .catch(er => {\r\n                    console.log(er)\r\n                    setInput({\r\n                        ...input,\r\n                    })\r\n                })\r\n\r\n        } else {\r\n            alert('Maaf Kolom ada yang belum diisi, Silahkan cek kembali')\r\n        }\r\n    }\r\n    const handleBack = (event) => {\r\n        event.preventDefault();\r\n        history.push(\"/game/tablegame\")\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div id=\"contentcreate\">\r\n                <h1> <span> Add Movie </span></h1 >\r\n                <form style={{ margin: \"20px\", padding: \"15px\" }} onSubmit={handleUpdate}>\r\n                    <div>\r\n                        <InputLabel style={{ float: \"right\", marginRight: \"450px\", color: \"black\", fontSize: \"16px\", fontWeight: 'bolder' }}> Genre: </InputLabel>\r\n                        <InputLabel style={{ marginLeft: \"10px\", color: \"black\", fontSize: \"16px\", fontWeight: 'bolder' }}> Game Title: </InputLabel>\r\n                        <TextField style={{ width: \"400px\", marginTop: '10px' }}\r\n                            type=\"text\"\r\n                            id=\"outlined-secondary\"\r\n                            label=\"Game Title\"\r\n                            variant=\"outlined\"\r\n                            name=\"name\"\r\n                            onChange={handleChange}\r\n                            value={input.name} />\r\n\r\n                        <TextField style={{ marginLeft: \"100px\", width: \"400px\", marginTop: '10px' }}\r\n                            type=\"text\"\r\n                            id=\"outlined-secondary\"\r\n                            label=\"Genre\"\r\n                            variant=\"outlined\"\r\n                            name=\"genre\"\r\n                            onChange={handleChange}\r\n                            value={input.genre}\r\n                        />\r\n                    </div>\r\n                    <div style={{ marginTop: \"50px\" }} >\r\n                        <InputLabel style={{\r\n                            float: \"right\",\r\n                            marginRight: \"430px\",\r\n                            color: \"black\",\r\n                            fontSize: \"16px\",\r\n                            fontWeight: 'bolder'\r\n                        }\r\n                        }> Release: </InputLabel>\r\n                        <InputLabel style={{\r\n                            marginLeft: \"10px\",\r\n                            color: \"black\",\r\n                            fontSize: \"16px\",\r\n                            fontWeight: 'bolder'\r\n                        }}> Platform: </InputLabel>\r\n                        <TextField style={{ width: \"400px\", marginTop: '10px' }}\r\n                            type=\"text\"\r\n                            id=\"outlined-secondary\"\r\n                            label=\"Platform\"\r\n                            variant=\"outlined\"\r\n                            name=\"platform\"\r\n                            onChange={handleChange}\r\n                            value={input.platform}\r\n                        />\r\n\r\n                        <TextField style={{\r\n                            marginLeft: \"100px\",\r\n                            width: \"400px\",\r\n                            marginTop: '10px'\r\n                        }}\r\n                            type=\"number\"\r\n                            id=\"outlined-secondary\"\r\n                            variant=\"outlined\"\r\n                            name=\"release\"\r\n                            onChange={handleChange}\r\n                            value={input.release}\r\n                            inputProps={{ step: \"1\" }}\r\n                        />\r\n                    </div>\r\n                    <div style={{ marginTop: \"50px\" }} >\r\n\r\n\r\n                        <InputLabel style={{\r\n                            float: \"right\",\r\n                            marginRight: \"430px\",\r\n                            color: \"black\",\r\n                            fontSize: \"16px\",\r\n                            fontWeight: 'bolder'\r\n                        }}> Mode: </InputLabel>\r\n                        <InputLabel style={{\r\n                            marginLeft: \"10px\",\r\n                            color: \"black\",\r\n                            fontSize: \"16px\",\r\n                            fontWeight: 'bolder'\r\n                        }}> Image URL: </InputLabel>\r\n                        <TextField style={\r\n                            {\r\n                                width: \"400px\",\r\n                                marginTop: '10px'\r\n                            }\r\n                        }\r\n                            type=\"text\"\r\n                            id=\"outlined-secondary\"\r\n                            label=\"image URL\"\r\n                            variant=\"outlined\"\r\n                            name=\"image_url\"\r\n                            onChange={\r\n                                handleChange\r\n                            }\r\n                            value={\r\n                                input.image_url\r\n                            } />\r\n                        <FormControlLabel control={\r\n                            <Checkbox\r\n                                checked={\r\n                                    input.checkedsingleplayer\r\n                                }\r\n                                onChange={\r\n                                    handleCheckedSinglePlayer\r\n                                }\r\n                                name=\"singleplayer\"\r\n                                color=\"primary\"\r\n                                style={\r\n                                    {\r\n                                        marginLeft: \"100px\",\r\n                                        marginTop: \"10px\"\r\n                                    }\r\n                                }\r\n                            />\r\n                        }\r\n                            label=\"SinglePlayer\" /\r\n                        >\r\n                        <FormControlLabel control={\r\n                            <Checkbox\r\n                                checked={\r\n                                    input.checkedmultiplayer\r\n                                }\r\n                                onChange={\r\n                                    handleCheckedMultiPlayer\r\n                                }\r\n                                name=\"multiplayer\"\r\n                                color=\"primary\"\r\n                                style={\r\n                                    {\r\n                                        marginLeft: \"100px\",\r\n                                        marginTop: \"10px\"\r\n                                    }\r\n                                }\r\n                            />\r\n                        }\r\n                            label=\"Multiplayer\" />\r\n                    </div>\r\n                    <div style={{ marginTop: \"50px\" }} >\r\n                        <Button type=\"Submit\"\r\n                            variant=\"contained\"\r\n                            style={\r\n                                {\r\n                                    backgroundColor: \"gold\",\r\n                                    color: \"black\",\r\n                                    fontWeight: 'bolder'\r\n                                }\r\n                            }> Submit </Button>\r\n                        <Button variant=\"contained\"\r\n                            onClick={\r\n                                handleBack\r\n                            }\r\n                            color=\"warning\"\r\n                            style={\r\n                                {\r\n                                    float: \"right\",\r\n                                    backgroundColor: \"black\",\r\n                                    color: \"gold\",\r\n                                    fontWeight: 'bolder'\r\n                                }\r\n                            }>Back\r\n                                    </Button> </div >\r\n                </form>\r\n            </div >\r\n        </>\r\n    )\r\n}\r\nexport default EditGame;"]},"metadata":{},"sourceType":"module"}